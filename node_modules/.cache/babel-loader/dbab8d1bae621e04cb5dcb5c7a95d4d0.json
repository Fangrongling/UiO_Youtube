{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/List.jsx\";\nimport React, { Component } from 'react';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckBoxChange = e => {\n      const _e$target = e.target,\n            checked = _e$target.checked,\n            value = _e$target.value;\n      const checkedValues = this.state.checkedValues;\n\n      if (checked && checkedValues.indexOf(value) === -1) {\n        checkedValues.push(value);\n      } else {\n        checkedValues.filter(item => item !== value);\n      }\n\n      this.setState({\n        checkedValues\n      });\n    };\n\n    this.state = {\n      isGoing: false\n    };\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n  }\n\n  handleInputChange(e) {\n    console.log(e.target);\n    const target = e.target;\n    const value = target.checked;\n    const name = target.name;\n    /*this.setState({\n        isGoing: value\n      });*/\n    // l.checked = target.checked;\n    //this.props.addToSearchList(name);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"List\",\n      style: {\n        position: 'fixed',\n        right: '10%',\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.list.map(l => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, l, React.createElement(\"input\", {\n      name: l,\n      type: \"checkbox\",\n      checked: l.checked,\n      style: {\n        float: 'right'\n      },\n      onChange: this.handleCheckBoxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/List.jsx"],"names":["React","Component","List","constructor","props","handleCheckBoxChange","e","target","checked","value","checkedValues","state","indexOf","push","filter","item","setState","isGoing","bind","handleInputChange","console","log","name","render","position","right","textAlign","list","map","l","float"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAsBlBC,oBAtBkB,GAsBMC,CAAD,IAAO;AAAA,wBACCA,CAAC,CAACC,MADH;AAAA,YAClBC,OADkB,aAClBA,OADkB;AAAA,YACTC,KADS,aACTA,KADS;AAAA,YAElBC,aAFkB,GAEA,KAAKC,KAFL,CAElBD,aAFkB;;AAG1B,UAAIF,OAAO,IAAIE,aAAa,CAACE,OAAd,CAAsBH,KAAtB,MAAiC,CAAC,CAAjD,EAAoD;AAClDC,QAAAA,aAAa,CAACG,IAAd,CAAmBJ,KAAnB;AACD,OAFD,MAEO;AACLC,QAAAA,aAAa,CAACI,MAAd,CAAqBC,IAAI,IAAIA,IAAI,KAAKN,KAAtC;AACD;;AACD,WAAKO,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KAjCe;;AAEhB,SAAKC,KAAL,GAAW;AACTM,MAAAA,OAAO,EAAE;AADA,KAAX;AAIA,SAAKZ,oBAAL,GAA4B,KAAKA,oBAAL,CAA0Ba,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,iBAAiB,CAACb,CAAD,EAAI;AACjBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,CAAC,CAACC,MAAd;AACA,UAAMA,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,UAAME,KAAK,GAAGF,MAAM,CAACC,OAArB;AACA,UAAMc,IAAI,GAAGf,MAAM,CAACe,IAApB;AACA;;;AAGD;AAEC;AACH;;AAeDC,EAAAA,MAAM,GAAE;AACJ,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,OAAX;AAAoBC,QAAAA,KAAK,EAAE,KAA3B;AAAkCC,QAAAA,SAAS,EAAC;AAA5C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWuB,IAAX,CAAgBC,GAAhB,CAAqBC,CAAD,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,CAAL,EACI;AACA,MAAA,IAAI,EAAEA,CADN;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,OAAO,EAAEA,CAAC,CAACrB,OAHX;AAIA,MAAA,KAAK,EAAE;AAACsB,QAAAA,KAAK,EAAC;AAAP,OAJP;AAKA,MAAA,QAAQ,EAAE,KAAKzB,oBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADH,CADF;AAcH;;AAnDuB;;AAuD5B,eAAeH,IAAf","sourcesContent":["import React,{ Component} from 'react';\n\nclass List extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        isGoing: false,\n      }\n\n      this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n    }\n\n    handleInputChange(e) {\n        console.log(e.target);\n        const target = e.target;\n        const value = target.checked;\n        const name = target.name;\n        /*this.setState({\n            isGoing: value\n          });*/\n       // l.checked = target.checked;\n       \n        //this.props.addToSearchList(name);\n    }\n\n    handleCheckBoxChange = (e) => {\n        const { checked, value } = e.target\n        const { checkedValues } = this.state\n        if (checked && checkedValues.indexOf(value) === -1) {\n          checkedValues.push(value)\n        } else {\n          checkedValues.filter(item => item !== value)\n        }\n        this.setState({\n          checkedValues\n        })\n      }\n\n    render(){\n        return (\n          <div className=\"List\" style={{position: 'fixed', right: '10%', textAlign:'left'}}>\n            {this.props.list.map((l)=> (\n                <li>{l}\n                    <input \n                    name={l}\n                    type=\"checkbox\" \n                    checked={l.checked}\n                    style={{float:'right'}} \n                    onChange={this.handleCheckBoxChange} />\n                </li>\n            ))}\n          </div>\n        );\n    }\n     \n}\n\nexport default List;   "]},"metadata":{},"sourceType":"module"}