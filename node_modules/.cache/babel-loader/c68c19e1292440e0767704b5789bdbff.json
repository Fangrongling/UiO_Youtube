{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx\";\nimport React, { Component } from 'react';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      videos: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    console.log(e);\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block'\n    }));\n  }\n\n  render() {\n    let videos = this.state.videos;\n    return React.createElement(\"div\", {\n      className: \"VideoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, (this.props.videos.map(video => {\n      videos = videos.concat(Object.assign({}, video, {\n        dispaly: \"block\"\n      }));\n      this.setState({\n        videos\n      });\n    }), this.state.videos.map(video => (console.log(video), React.createElement(VidoeListItem, {\n      video: video,\n      isToggleOn: this.state.isToggleOn,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))), \")}\");\n  }\n\n}\n\nconst VidoeListItem = ({\n  video,\n  display,\n  isToggleOn,\n  handleClick\n}) => {\n  let imageUrl = video.snippet.thumbnails.medium.url;\n  let title = video.snippet.title;\n  let time = video.snippet.publishedAt;\n  let videoUrl = \"https://www.youtube.com/embed/\" + video.id.videoId;\n  title = title.replace(/&quot;/g, ' ');\n  return React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, isToggleOn ? [React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, time)] : React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: videoUrl,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    style: {\n      display: display\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default VideoList;","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx"],"names":["React","Component","VideoList","constructor","props","state","isToggleOn","videos","handleClick","bind","e","console","log","setState","prevState","display","render","map","video","concat","Object","assign","dispaly","VidoeListItem","imageUrl","snippet","thumbnails","medium","url","title","time","publishedAt","videoUrl","id","videoId","replace"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\n\nclass VideoList extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        isToggleOn: true,\n        videos: [],\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e) {\n        console.log(e)\n        this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn,\n          display: prevState.isToggleOn ? 'none': 'block'\n        }));\n    }\n\n    render(){\n        let videos = this.state.videos;\n        return (\n            <div className=\"VideoList\">\n            {\n                this.props.videos.map(video =>{\n                    videos = videos.concat(Object.assign({}, video, {dispaly: \"block\"}));\n                    this.setState({videos});\n                }),\n\n                this.state.videos.map(video => (\n                console.log(video),\n                <VidoeListItem \n                video={video}\n                isToggleOn={this.state.isToggleOn}\n                handleClick={this.handleClick}\n                />\n                ))\n            })}\n            </div>\n        );\n    }\n   \n  }\n\n  const VidoeListItem = ({video, display, isToggleOn, handleClick}) =>{\n    let imageUrl = video.snippet.thumbnails.medium.url;\n    let title = video.snippet.title;\n    let time = video.snippet.publishedAt;\n    let videoUrl = \"https://www.youtube.com/embed/\"+video.id.videoId\n    title = title.replace(/&quot;/g, ' ');\n    return(\n        <div onClick={handleClick}>\n            {\n                isToggleOn ? [\n                <img src={imageUrl}  alt=\"\" />,\n                <p>{title}</p>,\n                <p>{time}</p>] :\n                <iframe width=\"560\" height=\"315\" src={videoUrl} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen style={{display: display}}></iframe>\n            }\n        </div>\n    );\n  }\n  \n  export default VideoList;"]},"metadata":{},"sourceType":"module"}