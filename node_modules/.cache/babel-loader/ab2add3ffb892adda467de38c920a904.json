{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx\";\nimport React, { Component } from 'react';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videos: [],\n      isToggleOn: true,\n      dispaly: 'block',\n      clickedVideo: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e, video) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block',\n      clickedVideo: e.id.videoId\n    }));\n  }\n\n  render() {\n    let exit = false;\n    return React.createElement(\"div\", {\n      className: \"VideoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.videos.map(video => React.createElement(VidoeListItem, {\n      video: video,\n      handleClick: () => this.handleClick(video),\n      dispaly: this.state.dispaly,\n      isToggleOn: this.state.isToggleOn,\n      clickedVideo: this.state.clickedVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst VidoeListItem = ({\n  video,\n  handleClick,\n  display,\n  isToggleOn,\n  clickedVideo\n}) => {\n  let imageUrl = video.snippet.thumbnails.medium.url;\n  let title = video.snippet.title;\n  let time = video.snippet.publishedAt;\n  let videoUrl = \"https://www.youtube.com/embed/\" + video.id.videoId;\n  title = title.replace(/&quot;/g, ' ');\n  return React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, clickedVideo === video.id.videoId ? [isToggleOn ? [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, time)] : React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: videoUrl,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    style: {\n      display: display\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, time))] : [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, time)]);\n};\n\nexport default VideoList;","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx"],"names":["React","Component","VideoList","constructor","props","state","videos","isToggleOn","dispaly","clickedVideo","handleClick","bind","e","video","setState","prevState","display","id","videoId","render","exit","map","VidoeListItem","imageUrl","snippet","thumbnails","medium","url","title","time","publishedAt","videoUrl","replace"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\n\nclass VideoList extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        videos: [],\n        isToggleOn: true,\n        dispaly: 'block',\n        clickedVideo: \"\",\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(e, video) {\n        this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn,\n          display: prevState.isToggleOn ? 'none': 'block',\n          clickedVideo: e.id.videoId\n        }));\n    }\n\n    render(){\n        let exit = false;  \n        return (\n            <div className=\"VideoList\">\n            \n            {\n                this.props.videos.map(video => (\n                    <VidoeListItem \n                        video={video}\n                        handleClick={() => this.handleClick(video)}\n                        dispaly={this.state.dispaly}\n                        isToggleOn={this.state.isToggleOn}\n                        clickedVideo={this.state.clickedVideo}\n                    />\n                ))\n            }\n            </div>\n        );\n    }\n   \n  }\n\n  const VidoeListItem = ({video,  handleClick, display, isToggleOn, clickedVideo}) =>{\n    let imageUrl = video.snippet.thumbnails.medium.url;\n    let title = video.snippet.title;\n    let time = video.snippet.publishedAt;\n    let videoUrl = \"https://www.youtube.com/embed/\"+video.id.videoId\n    title = title.replace(/&quot;/g, ' ');\n    return(\n        <div onClick={handleClick}>\n            {clickedVideo===video.id.videoId ?[\n                isToggleOn ? [\n                    <p>====================================================</p>,\n                    <p>{title}</p>,\n                    <p>{time}</p>\n                    ]:\n                <iframe width=\"560\" height=\"315\" src={videoUrl} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen style={{display: display}}></iframe>,<li>\n                <p>{title}</p>\n                <p>{time}</p>\n                </li>\n                ] : [\n                    <p>====================================================</p>,\n                    <p>{title}</p>,\n                    <p>{time}</p>\n                ]}\n        </div>\n    );\n  }\n  \n  export default VideoList;\n"]},"metadata":{},"sourceType":"module"}