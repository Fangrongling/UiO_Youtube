{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx\";\nimport React, { Component } from 'react';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videos: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(video) {\n    //console.log(e)\n    let videos = this.state.videos;\n\n    if (videos.length) {\n      videos.map(v => {\n        if (v === video) {\n          if (v.isToggleOn) {\n            v.display = 'none';\n          } else {\n            v.display = 'block';\n          }\n\n          v.isToggleOn = !v.isToggleOn;\n        }\n      });\n    }\n    /*this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none': 'block'\n    }));*/\n\n  }\n\n  render() {\n    let videos = this.state.videos;\n    this.props.videos.map(video => {\n      videos = videos.concat(Object.assign({}, video, {\n        dispaly: \"block\",\n        isToggleOn: true\n      }));\n      this.setState({\n        videos\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"VideoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.videos.map(video => (console.log(this.props.videos.length), React.createElement(VidoeListItem, {\n      video: video,\n      handleClick: () => this.handleClick(video),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst VidoeListItem = ({\n  video,\n  handleClick\n}) => {\n  let imageUrl = video.snippet.thumbnails.medium.url;\n  let title = video.snippet.title;\n  let time = video.snippet.publishedAt;\n  let videoUrl = \"https://www.youtube.com/embed/\" + video.id.videoId;\n  title = title.replace(/&quot;/g, ' ');\n  return React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"//isToggleOn ? [\", React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, time), \"//] :\", React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: videoUrl,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default VideoList; //style={{display: display}}","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx"],"names":["React","Component","VideoList","constructor","props","state","videos","handleClick","bind","video","length","map","v","isToggleOn","display","render","concat","Object","assign","dispaly","setState","console","log","VidoeListItem","imageUrl","snippet","thumbnails","medium","url","title","time","publishedAt","videoUrl","id","videoId","replace"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\n\nclass VideoList extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        videos: [],\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n   \n    handleClick(video) {\n        //console.log(e)\n        let videos = this.state.videos;\n        if (videos.length) {\n            videos.map(v => {\n              if (v === video) {\n                  if(v.isToggleOn){\n                    v.display = 'none';\n                  }else{\n                    v.display = 'block';                      \n                  }\n                  v.isToggleOn = !v.isToggleOn;\n              }\n            })\n        }\n        /*this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn,\n          display: prevState.isToggleOn ? 'none': 'block'\n        }));*/\n    }\n\n    render(){\n        let videos = this.state.videos;\n        this.props.videos.map(video =>{\n            videos = videos.concat(Object.assign({}, video, {dispaly: \"block\", isToggleOn: true}));\n            this.setState({videos});\n        })\n        return (\n            <div className=\"VideoList\">\n            \n            {\n                this.props.videos.map(video => (\n                    console.log(this.props.videos.length),\n                    <VidoeListItem \n                        video={video}\n                        handleClick={() => this.handleClick(video)}\n                    />\n                ))\n            }\n            </div>\n        );\n    }\n   \n  }\n\n  const VidoeListItem = ({video,  handleClick}) =>{\n    let imageUrl = video.snippet.thumbnails.medium.url;\n    let title = video.snippet.title;\n    let time = video.snippet.publishedAt;\n    let videoUrl = \"https://www.youtube.com/embed/\"+video.id.videoId\n    title = title.replace(/&quot;/g, ' ');\n    return(\n        <div onClick={handleClick}>\n            \n                //isToggleOn ? [\n                <img src={imageUrl}  alt=\"\" />\n                <p>{title}</p>\n                <p>{time}</p>//] :\n                <iframe width=\"560\" height=\"315\" src={videoUrl} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen ></iframe>\n            \n        </div>\n    );\n  }\n  \n  export default VideoList;\n\n  //style={{display: display}}"]},"metadata":{},"sourceType":"module"}