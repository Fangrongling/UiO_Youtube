{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx\";\nimport React, { Component } from 'react';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videos: [],\n      isToggleOn: true,\n      dispaly: 'block',\n      clickedVideo: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.hiddenVideo = this.hiddenVideo.bind(this);\n  }\n\n  handleClick(e, video) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block',\n      clickedVideo: e.id.videoId\n    }));\n  }\n\n  hiddenVideo(e) {\n    console.log(e.target.value); //e.preventDefault();\n\n    this.props.addToHiddenList(e.target.value);\n  }\n\n  render() {\n    let videos = this.props.videos;\n    return React.createElement(\"div\", {\n      className: \"VideoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, (this.props.hiddenList.map(h => videos = videos.filter(el => el.id.videoId !== h)), console.log(\"map hiddenlist\")), videos.slice(0, 10).map(video => React.createElement(VidoeListItem, {\n      video: video,\n      handleClick: () => this.handleClick(video),\n      dispaly: this.state.dispaly,\n      isToggleOn: this.state.isToggleOn,\n      clickedVideo: this.state.clickedVideo,\n      addHiddenVideos: this.hiddenVideo,\n      hiddenVideos: this.props.hiddenList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst VidoeListItem = ({\n  video,\n  handleClick,\n  display,\n  isToggleOn,\n  clickedVideo,\n  addHiddenVideo,\n  hiddenVideos\n}) => {\n  let imageUrl = video.snippet.thumbnails.medium.url;\n  let title = video.snippet.title;\n  let time = video.snippet.publishedAt;\n  let videoUrl = \"https://www.youtube.com/embed/\" + video.id.videoId;\n  title = title.replace(/&quot;/g, ' ');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, (console.log(hiddenVideos), clickedVideo === video.id.videoId ? [isToggleOn ? [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: addHiddenVideos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, time))] : [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: videoUrl,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    style: {\n      display: display\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: addHiddenVideos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, time))]] : [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: addHiddenVideos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, time))]));\n};\n\nexport default VideoList;","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx"],"names":["React","Component","VideoList","constructor","props","state","videos","isToggleOn","dispaly","clickedVideo","handleClick","bind","hiddenVideo","e","video","setState","prevState","display","id","videoId","console","log","target","value","addToHiddenList","render","hiddenList","map","h","filter","el","slice","VidoeListItem","addHiddenVideo","hiddenVideos","imageUrl","snippet","thumbnails","medium","url","title","time","publishedAt","videoUrl","replace","addHiddenVideos"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\n\nclass VideoList extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        videos: [],\n        isToggleOn: true,\n        dispaly: 'block',\n        clickedVideo: \"\",\n      };\n      this.handleClick = this.handleClick.bind(this);\n      this.hiddenVideo = this.hiddenVideo.bind(this);\n    }\n   \n    handleClick(e, video) {\n        this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn,\n          display: prevState.isToggleOn ? 'none': 'block',\n          clickedVideo: e.id.videoId\n        }));\n    }\n\n    hiddenVideo(e){\n        console.log(e.target.value);\n        //e.preventDefault();\n        this.props.addToHiddenList(e.target.value);\n    }\n\n    render(){\n        let videos = this.props.videos;  \n        return (\n            <div className=\"VideoList\">\n            {\n                this.props.hiddenList.map(h=> (\n                    videos = videos.filter(el => el.id.videoId !== h )\n                )), console.log(\"map hiddenlist\")\n            }\n            \n            {\n                videos.slice(0, 10).map(video => (\n                    <VidoeListItem \n                        video={video}\n                        handleClick={() => this.handleClick(video)}\n                        dispaly={this.state.dispaly}\n                        isToggleOn={this.state.isToggleOn}\n                        clickedVideo={this.state.clickedVideo}\n                        addHiddenVideos={this.hiddenVideo}\n                        hiddenVideos={this.props.hiddenList}\n                    />\n                ))\n            }\n            </div>\n        );\n    }\n   \n  }\n\n  const VidoeListItem = ({video,  handleClick, display, isToggleOn, clickedVideo, addHiddenVideo, hiddenVideos}) =>{\n    let imageUrl = video.snippet.thumbnails.medium.url;\n    let title = video.snippet.title;\n    let time = video.snippet.publishedAt;\n    let videoUrl = \"https://www.youtube.com/embed/\"+video.id.videoId\n    title = title.replace(/&quot;/g, ' ');\n    return(\n        <div>\n            {console.log(hiddenVideos), clickedVideo===video.id.videoId ?[\n                isToggleOn ? [\n                        <p>====================================================</p>,\n                        <button value={video.id.videoId} onClick={addHiddenVideos}>Hidden Video</button>,\n                        <div onClick={handleClick}>\n                            <p>{title}</p>\n                            <p>{time}</p>\n                        </div>\n                    ]:[\n                        <p>====================================================</p>,\n                        <iframe width=\"560\" height=\"315\" src={videoUrl} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen style={{display: display}}></iframe>,\n                        <br/>,<button value={video.id.videoId} onClick={addHiddenVideos}>Hidden Video</button>,\n                        <div onClick={handleClick}>\n                            <p>{title}</p>\n                            <p>{time}</p>\n                        </div>\n                    ]\n                ] : [\n                    <p>====================================================</p>,\n                    <button value={video.id.videoId} onClick={addHiddenVideos}>Hidden Video</button>,\n                    <div onClick={handleClick}>                    \n                        <p>{title}</p>\n                        <p>{time}</p>\n                    </div>\n                ]}\n        </div>\n    );\n  }\n  \n  export default VideoList;\n"]},"metadata":{},"sourceType":"module"}