{"ast":null,"code":"var _jsxFileName = \"/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx\";\nimport React, { Component } from 'react';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videos: [],\n      isToggleOn: true,\n      dispaly: 'block',\n      clickedVideo: \"\",\n      hiddenVideo: this.props.hiddenList\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.hiddenVideo = this.hiddenVideo.bind(this);\n  }\n\n  handleClick(e, video) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      display: prevState.isToggleOn ? 'none' : 'block',\n      clickedVideo: e.id.videoId\n    }));\n  }\n\n  hiddenVideo(e) {\n    //console.log(e.target.value);\n    //e.preventDefault();\n    this.props.addToHiddenList(e.target.value);\n  }\n\n  render() {\n    let exist = false;\n    return React.createElement(\"div\", {\n      className: \"VideoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.videos.map(video => {\n      return React.createElement(React.Fragment, null, this.state.hiddenList.map(h => {\n        if (video.id.videoId === h) {\n          exist = true;\n        }\n      }))(!exist) ? React.createElement(VidoeListItem, {\n        video: video,\n        handleClick: () => this.handleClick(video),\n        dispaly: this.state.dispaly,\n        isToggleOn: this.state.isToggleOn,\n        clickedVideo: this.state.clickedVideo,\n        hiddenVideo: this.hiddenVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : null;\n    }));\n  }\n\n}\n\nconst VidoeListItem = ({\n  video,\n  handleClick,\n  display,\n  isToggleOn,\n  clickedVideo,\n  hiddenVideo\n}) => {\n  let imageUrl = video.snippet.thumbnails.medium.url;\n  let title = video.snippet.title;\n  let time = video.snippet.publishedAt;\n  let videoUrl = \"https://www.youtube.com/embed/\" + video.id.videoId;\n  title = title.replace(/&quot;/g, ' ');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, clickedVideo === video.id.videoId ? [isToggleOn ? [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: hiddenVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, time))] : [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: videoUrl,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    style: {\n      display: display\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: hiddenVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, time))]] : [React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"====================================================\"), React.createElement(\"button\", {\n    value: video.id.videoId,\n    onClick: hiddenVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Hidden Video\"), React.createElement(\"div\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, time))]);\n};\n\nexport default VideoList;","map":{"version":3,"sources":["/Users/fangrongling/Desktop/youtube_uio/src/VideoList.jsx"],"names":["React","Component","VideoList","constructor","props","state","videos","isToggleOn","dispaly","clickedVideo","hiddenVideo","hiddenList","handleClick","bind","e","video","setState","prevState","display","id","videoId","addToHiddenList","target","value","render","exist","map","h","VidoeListItem","imageUrl","snippet","thumbnails","medium","url","title","time","publishedAt","videoUrl","replace"],"mappings":"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","sourcesContent":["import React,{ Component} from 'react';\n\nclass VideoList extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        videos: [],\n        isToggleOn: true,\n        dispaly: 'block',\n        clickedVideo: \"\",\n        hiddenVideo:this.props.hiddenList,\n      };\n      this.handleClick = this.handleClick.bind(this);\n      this.hiddenVideo = this.hiddenVideo.bind(this);\n    }\n   \n    handleClick(e, video) {\n        this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn,\n          display: prevState.isToggleOn ? 'none': 'block',\n          clickedVideo: e.id.videoId\n        }));\n    }\n\n    hiddenVideo(e){\n        //console.log(e.target.value);\n        //e.preventDefault();\n        this.props.addToHiddenList(e.target.value);\n    }\n\n    render(){\n        let exist = false;  \n        return (\n            <div className=\"VideoList\">\n            \n            {\n                this.props.videos.map(video => {\n                    return(\n                        <>\n                        {this.state.hiddenList.map(h => {\n                            if(video.id.videoId === h){\n                                exist = true;  \n                            }\n                        })}\n                        </>\n                        (!exist) ?\n                            <VidoeListItem \n                                video={video}\n                                handleClick={() => this.handleClick(video)}\n                                dispaly={this.state.dispaly}\n                                isToggleOn={this.state.isToggleOn}\n                                clickedVideo={this.state.clickedVideo}\n                                hiddenVideo={this.hiddenVideo}\n                            /> : null \n                        );\n                })\n            }\n            </div>\n        );\n    }\n   \n  }\n\n  const VidoeListItem = ({video,  handleClick, display, isToggleOn, clickedVideo, hiddenVideo}) =>{\n    let imageUrl = video.snippet.thumbnails.medium.url;\n    let title = video.snippet.title;\n    let time = video.snippet.publishedAt;\n    let videoUrl = \"https://www.youtube.com/embed/\"+video.id.videoId\n    title = title.replace(/&quot;/g, ' ');\n    return(\n        <div>\n            {clickedVideo===video.id.videoId ?[\n                isToggleOn ? [\n                        <p>====================================================</p>,\n                        <button value={video.id.videoId} onClick={hiddenVideo}>Hidden Video</button>,\n                        <div onClick={handleClick}>\n                            <p>{title}</p>\n                            <p>{time}</p>\n                        </div>\n                    ]:[\n                        <p>====================================================</p>,\n                        <iframe width=\"560\" height=\"315\" src={videoUrl} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen style={{display: display}}></iframe>,\n                        <br/>,<button value={video.id.videoId} onClick={hiddenVideo}>Hidden Video</button>,\n                        <div onClick={handleClick}>\n                            <p>{title}</p>\n                            <p>{time}</p>\n                        </div>\n                    ]\n                ] : [\n                    <p>====================================================</p>,\n                    <button value={video.id.videoId} onClick={hiddenVideo}>Hidden Video</button>,\n                    <div onClick={handleClick}>                    \n                        <p>{title}</p>\n                        <p>{time}</p>\n                    </div>\n                ]}\n        </div>\n    );\n  }\n  \n  export default VideoList;\n"]},"metadata":{},"sourceType":"module"}